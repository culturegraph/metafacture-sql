package org.culturegraph.mf.sql.util;

import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;

import org.culturegraph.mf.exceptions.MetafactureException;
import org.culturegraph.mf.framework.StreamReceiver;
import org.culturegraph.mf.sql.util.JdbcUtil.Bug;

public final class DirectQuery extends QueryBase {

	private final Statement statement;
	
	public DirectQuery(final Connection connection, final boolean emitGeneratedKeys) {
		super(connection, emitGeneratedKeys);
		
		try { statement = connection.createStatement(); }
		catch (SQLException e) { throw new MetafactureException(e); }
	}
	
	public void execute(final String sql) {
		try { 
			statement.execute(sql, Statement.NO_GENERATED_KEYS); 
		} 
		catch (SQLException e) { throw new MetafactureException(e); }
	}
	
	public void execute(final String sql, final StreamReceiver receiver) {
		final int autoGeneratedKeys;
		if (isEmitGeneratedKeys() && 
				!hasDriverBug(Bug.RETURN_GENERATED_KEYS_PRODUCES_INVALID_SQL)) {
			autoGeneratedKeys = Statement.RETURN_GENERATED_KEYS;
		} else {
			autoGeneratedKeys = Statement.NO_GENERATED_KEYS;
		}

		try { statement.execute(sql, autoGeneratedKeys); } 
		catch (SQLException e) { throw new MetafactureException(e); }
		
		processResults(statement, receiver);
	}
	
	public void close() {
		try {statement.close(); }
		catch (SQLException e) { throw new MetafactureException(e); }
	}

}
